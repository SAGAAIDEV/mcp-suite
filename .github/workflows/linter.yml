#################################
#################################
# CI-Linter Pipeline GitHub Actions #
#################################
#################################
name: CI-Linter Pipeline

on:
  push:
    branches-ignore: [master, main]  # Skip CI on pushes to master/main (adjust as needed)
  pull_request:
    branches: [master, main]         # Run CI for pull requests targeting master/main

jobs:
  build:
    name: Lint Code Base and Run Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      statuses: write

    steps:
      # --------------------------------------------
      # Stage 1: Checkout the Repository
      # --------------------------------------------
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch the full Git history

      # --------------------------------------------
      # Stage 2: Run GitHub Super Linter (Optional)
      # --------------------------------------------
      - name: Lint Code Base with Super Linter
        uses: super-linter/super-linter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          VALIDATE_OPENAPI: false
          VALIDATE_PYTHON_BLACK: false
          VALIDATE_PYTHON_ISORT: false
          VALIDATE_JSCPD: false
          VALIDATE_DOCKERFILE_HADOLINT: false
          VALIDATE_PYTHON_PYLINT: false
          VALIDATE_MARKDOWN: false

      # --------------------------------------------
      # Stage 3: Set Up Python Environment
      # --------------------------------------------
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'  # Specify your desired Python version

      # --------------------------------------------
      # Stage 4: Install Project Dependencies
      # --------------------------------------------
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      # --------------------------------------------
      # Stage 5: Run Tests with Coverage (CI Only)
      # --------------------------------------------
      - name: Run tests with coverage
        run: |
          # Ensure pytest-cov is included in your [dev] dependencies.
          python -m uv run pytest . --cov=src/ --cov-report=term-missing --cov-fail-under=100 -v

      # --------------------------------------------
      # Stage 6: Run Black for Code Formatting (CI Only)
      # --------------------------------------------
      - name: Run Black
        run: |
          python -m uv run black .

      # --------------------------------------------
      # Stage 7: Run isort for Import Order Checks (CI Only)
      # --------------------------------------------
      - name: Run isort
        run: |
          python -m uv run isort .
